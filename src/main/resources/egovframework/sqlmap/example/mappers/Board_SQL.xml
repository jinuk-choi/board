<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.board.service.impl.BoardMapper">

	
<!-- 게시글 리스트 -->	
	<select id="selectBoardList" parameterType="boardVo" resultType="egovMap">
	
			SELECT	@ROWNUM := @ROWNUM - 1 AS ROWNUM,
					A.IDX as idx
				  , A.TITLE as title
				  , A.CONTENTS as contents
				  , IFNULL(A.COUNT,0) as count
				  , A.WRITER as writer
				  , A.INDATE as indate
				  , B.USER_NAME as writerNm
				  , A.A_GROUP as aGroup
				  , A.a_depth as aDepth
				  , A.a_order as aOrder 
			FROM 	TB_BOARD A
			LEFT JOIN TB_USER B ON A.WRITER = B.USER_ID,
					(SELECT @rownum := (SELECT	COUNT(*)-#{firstIndex}+1 FROM tb_board A)) tc		
			WHERE 1=1			
			<if test="searchKeyword != null and searchKeyword != ''">
	        AND	(A.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
							OR	A.CONTENTS LIKE CONCAT('%',#{searchKeyword},'%')
							)
			</if>
			ORDER BY				a_group DESC, a_order DESC	
			LIMIT	#{firstIndex}, #{recordCountPerPage}
		
	</select>
	
	
<!-- 게시글 작성하기 -->			
	<insert id="insertBoard" parameterType="boardVO">

			INSERT INTO TB_BOARD
				(   WRITER
				  , TITLE
				  , CONTENTS
				  , writerNm
				  , a_group
				  , a_order
				  , a_depth )
			VALUES (#{writer}
				  , #{title}
				  , #{contents}
				  , #{writerNm} 
				  , #{aGroup}
				  , #{aOrder}
				  , #{aDepth} + 1 )
			
			<selectKey keyProperty="idx" resultType="Integer">
	       		SELECT LAST_INSERT_ID()
	   		</selectKey>	
	</insert>
	<update id="updateEdBoard" parameterType="boardVO" >
		UPDATE tb_board SET a_group = LAST_INSERT_ID() WHERE idx = LAST_INSERT_ID()
	</update>

	<update id="updateReBoard" parameterType="boardVO" >
		UPDATE tb_board SET a_order = a_order + 1 where a_group = #{aGroup} and a_order >= #{aOrder} and idx != last_insert_id() 
	</update> 
	
<!-- 게시글 수정하기 -->
	<update id="updateBoard">

			UPDATE		TB_BOARD
			SET 		IDX=#{idx}
					   ,WRITER=#{writer}
				       ,CONTENTS=#{contents}
				       ,TITLE=#{title}
			WHERE 	    IDX=#{idx}

	</update>
	
<!-- 게시글 삭제하기 -->
	<delete id="deleteBoard">

			DELETE FROM TB_BOARD
			WHERE IDX=#{idx}

	</delete>

<!-- 게시글 보기 -->
	<select id="selectBoard" resultType="boardVo">
			SELECT
				A.IDX as idx
				  , A.TITLE as title
				  , A.CONTENTS as contents
				  , IFNULL(A.COUNT,0) as count
				  , A.WRITER as writer
				  , A.INDATE as indate
				  , B.USER_NAME as writerNm
				  , A.A_GROUP as aGroup
				  , A.a_depth as aDepth
				  , A.a_order as aOrder 
			FROM TB_BOARD A LEFT JOIN TB_USER B ON A.WRITER = B.USER_ID
			WHERE A.IDX=#{idx, jdbcType=VARCHAR}

	</select>

<!-- 게시글 갯수 -->
	<select id="selectBoardListTotCnt"  parameterType="boardVO" resultType="int">

			SELECT COUNT(*) totcnt
			FROM TB_BOARD A 
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        AND	(A.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
					OR	A.CONTENTS LIKE CONCAT('%',#{searchKeyword},'%')
					)
			</if>
	</select>
	
<!-- 조회수 -->	
	<update id="BoardCount" >

			UPDATE  TB_BOARD
			SET		COUNT = COUNT + 1
			WHERE IDX=#{idx}
			
	</update>

<!-- 댓글작성 -->
	<insert id="insertReply" parameterType="boardVO">

			INSERT INTO TB_REPLY
				( IDX
				  , REPLY
				  , WRITER
				  , b_group
			  	  , b_order
			      , b_depth )
			VALUES ( #{idx}
				  , #{reply, jdbcType=VARCHAR}
				  , #{writer, jdbcType=VARCHAR} 
				  , #{bGroup}
				  , #{bOrder}
				  , #{bDepth} + 1 )
				  
		<selectKey keyProperty="seq" resultType="Integer">
	        SELECT LAST_INSERT_ID()
	    </selectKey>	

	</insert>
	
	<update id="updateComment" parameterType="boardVO" >
		UPDATE tb_reply SET b_group = LAST_INSERT_ID() WHERE seq = LAST_INSERT_ID()
	</update>

	<update id="updateReComment" parameterType="boardVO" >
		UPDATE tb_reply SET b_order = b_order + 1 where b_group = #{bGroup} and b_order >= #{bOrder} and seq != last_insert_id()
	</update> 

<!-- 댓글리스트 -->
	<select id="selectReplyList" parameterType="boardVO" resultType="egovMap">

			SELECT
				A.IDX as idx
				  , A.SEQ as seq
				  , A.REPLY as reply
				  , A.WRITER as writer
				  , A.INDATE as indate
				  , A.B_GROUP as bGroup
				  , A.B_DEPTH as bDepth
				  , A.B_ORDER as bOrder
			FROM TB_REPLY A
			WHERE 1=1
			AND	A.IDX = #{idx}
			ORDER BY	b_group DESC, b_order DESC	
			LIMIT	#{firstIndex}, #{recordCountPerPage}
	</select>

<!-- 댓글 갯수 -->
<select id="replyCount" parameterType="boardVO"  resultType="int">
    	  SELECT COUNT(*)	totcnt	             
	      FROM           	tb_reply	  
	      WHERE			 IDX = #{idx}				  	  		   	
	      
</select>

<!-- 댓글 삭제 -->
<delete id="replyDelete" parameterType="boardVO">
    	 DELETE FROM tb_reply
    	 WHERE		 seq = #{seq}  		   	
</delete>

<!-- 댓글 수정 -->
<update id="editComment" parameterType="boardVO">
	UPDATE  tb_reply
	SET		reply = #{reply}
	WHERE	seq = #{seq}	   	
	      
</update>

<!-- 회원가입 -->
	<insert id="insertUser" parameterType="boardVO">

			INSERT INTO TB_USER
				( user_id
				  , PASSWORD
				  , USER_NAME )
			VALUES ( #{userId}
				  , #{password}
				  , #{user_name} )
				
	</insert>

	
<!-- 로그인 체크 -->	
	<select id="selectLoginCheck" parameterType="boardVo" resultType="String">

			SELECT USER_NAME
			FROM TB_USER
			WHERE 1=1
			AND USER_ID = #{userId}
			AND PASSWORD = #{password}
			
	
	</select>

</mapper>